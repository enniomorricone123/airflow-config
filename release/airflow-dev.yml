apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: airflow
  namespace: dev
  annotations:
    flux.weave.works/automated: "true"
spec:
  releaseName: airflow-dev
  chart:
    repository: https://enniomorricone123.github.io/airflow-eks-helm-chart
    name: airflow
    version: 1.0.0
  values:
    fernetKey: "zTxhk7FuGqQVPZVoukLn5bGWOrgHzhQnBnaqAItcZGI="
    env:
      - name: "AIRFLOW__KUBERNETES__DAGS_IN_IMAGE"
        value: "False"
      - name: "AIRFLOW__KUBERNETES__NAMESPACE"
        value: "dev"
      - name: "AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY"
        value: "apache/airflow"
      - name: "AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG"
        value: "2.0.2-python3.7"
      - name: "AIRFLOW__KUBERNETES__RUN_AS_USER"
        value: "50000"
      - name: "AIRFLOW__CORE__LOAD_EXAMPLES"
        value: "False"
      - name : "AIRFLOW__WEBSERVER__BASE_URL"
        value: "https://localhost:8080/airflow-dev"
      - name : "AIRFLOW__KUBERNETES__LOGS_VOLUME_CLAIM"
        value: "airflow-dev-logs"
    executor: "KubernetesExecutor"
    dags:
      persistence:
        enabled: true
        size: 512Mi
        storageClassName: aws-efs
        existingClaim: efs-storage-claim
      gitSync:
        enabled: true
        repo: git@github.com:enniomorricone123/airflow-dags.git
        branch: master
        maxFailures: 0
        subpath: ""
        wait: 60
        sshKeySecret: airflow-git-private-dags
    ingress:
      enabled: true
      web:
        path: "airflow-dev"
    webserver:
      extraVolumes:
        - name: "logs"
          persistentVolumeClaim:
            claimName: "airflow-dev-logs"
      extraVolumeMounts:
        - name: "logs"
          mountPath: "/opt/airflow/logs"
        